Conventional Commits - это простое соглашение о том, как нужно писать сообщения коммитов.
Оно описывает простой набор правил для создания понятной истории коммитов,
а также позволяет проще разрабатывать инструменты автоматизации, основанные на
истории коммитов. Данное соглашение совместимо с SemVer (http://semver.org),
описывая новые функции (features), исправления (fixes) и изменения, нарушающие
обратную совместимость (breaking changes) в сообщениях коммитов.

Сообщения коммитов должны быть следующей структуры:

<тип>[опциональная область]: <краткое описание>

[опциональное подробное описание]

[опциональные примечания]

Коммиты могут содержать следующие структурные элементы для сообщений пользователям
вашей библиотеки:

1. fix: коммит типа fix исправляет ошибку в вашем коде
(он соответствует ПАТЧ-версии в SemVer)
2. feat: коммит типа feat добавляет новую функцию в ваш код
(он соответствует МИНОРНОЙ версии в SemVer).
3. BREAKING CHANGE: коммит, который содержит текст BREAKING CHANGE:
в начале своего не обязательного подробного описания или в примечаниях,
добавляет изменения, нарушающие обратную совместимость вашего API
(он соответствует МАЖОРНОЙ версии в SemVer).
Обратно несовместимые изменения могут быть частью коммита любого типа.
4. Другое: коммиты с типами, которые отличаются от fix: и feat:,
также разрешены. Например, @commitlint/config-conventional
(основанный на The Angular Convention)
рекомендует: chore:, docs:, style:, refactor:, perf:, test:, и другие.

Мы также рекомендуем improvement для коммитов, которые вносят улучшения в текущую
реализацию без добавления новых функций и исправления ошибок. Обратите внимание, что
данный тип не описывается данной спецификацией и не имеет эффекта в SemVer
(за исключением, когда он включает обратно несовместимые изменения).

Область изменений может быть объявлена рядом с типом коммита для добавления дополнительной
информации о контексте. Она должна содержаться в круглых скобках, например,
feat(парсер): добавлена возможность парсить массивы.
